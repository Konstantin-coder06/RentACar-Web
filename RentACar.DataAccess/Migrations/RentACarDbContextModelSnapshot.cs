// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentACar.DataAccess;

#nullable disable

namespace RentACar.DataAccess.Migrations
{
    [DbContext(typeof(RentACarDbContext))]
    partial class RentACarDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RentACar.Models.CType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeatCapacity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("RentACar.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AdditionalMileageCharge")
                        .HasColumnType("float");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EngineCapacity")
                        .HasColumnType("float");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MileageLimitForDay")
                        .HasColumnType("float");

                    b.Property<double>("MileageLimitForWeek")
                        .HasColumnType("float");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PricePerDay")
                        .HasColumnType("float");

                    b.Property<double>("PricePerWeek")
                        .HasColumnType("float");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdditionalMileageCharge = 0.20000000000000001,
                            Available = true,
                            Brand = "Toyota",
                            CategoryId = 9,
                            Color = "White",
                            Description = "Compact and fuel-efficient",
                            EngineCapacity = 1.8,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 150.0,
                            MileageLimitForWeek = 1000.0,
                            Model = "Corolla",
                            PricePerDay = 80.0,
                            PricePerWeek = 450.0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 2,
                            AdditionalMileageCharge = 0.25,
                            Available = true,
                            Brand = "Honda",
                            CategoryId = 3,
                            Color = "Black",
                            Description = "Sporty and reliable",
                            EngineCapacity = 2.0,
                            Gearbox = "Manual",
                            MileageLimitForDay = 200.0,
                            MileageLimitForWeek = 1200.0,
                            Model = "Civic",
                            PricePerDay = 140.0,
                            PricePerWeek = 600.0,
                            Year = 2022
                        },
                        new
                        {
                            Id = 3,
                            AdditionalMileageCharge = 0.22,
                            Available = true,
                            Brand = "Ford",
                            CategoryId = 7,
                            Color = "Black",
                            Description = "Comfortable and stylish",
                            EngineCapacity = 5.0,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 250.0,
                            MileageLimitForWeek = 1500.0,
                            Model = "Mustang",
                            PricePerDay = 200.0,
                            PricePerWeek = 910.0,
                            Year = 2020
                        },
                        new
                        {
                            Id = 4,
                            AdditionalMileageCharge = 0.5,
                            Available = true,
                            Brand = "BMW",
                            CategoryId = 2,
                            Color = "Gray",
                            Description = "Luxury and performance",
                            EngineCapacity = 0.0,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 300.0,
                            MileageLimitForWeek = 2000.0,
                            Model = "420i",
                            PricePerDay = 250.0,
                            PricePerWeek = 1000.0,
                            Year = 2022
                        },
                        new
                        {
                            Id = 5,
                            AdditionalMileageCharge = 0.55000000000000004,
                            Available = true,
                            Brand = "Mercedes-Benz",
                            CategoryId = 2,
                            Color = "Red",
                            Description = "Premium luxury",
                            EngineCapacity = 3.0,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 300.0,
                            MileageLimitForWeek = 2000.0,
                            Model = "C-Class",
                            PricePerDay = 210.0,
                            PricePerWeek = 850.0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 6,
                            AdditionalMileageCharge = 1.0,
                            Available = true,
                            Brand = "Audi",
                            CategoryId = 3,
                            Color = "Green",
                            Description = "High-performance sports car",
                            EngineCapacity = 5.2000000000000002,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 400.0,
                            MileageLimitForWeek = 2500.0,
                            Model = "R8 Spyder",
                            PricePerDay = 750.0,
                            PricePerWeek = 6400.0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 7,
                            AdditionalMileageCharge = 1.5,
                            Available = true,
                            Brand = "Lamborghini",
                            CategoryId = 3,
                            Color = "Black",
                            Description = "Exotic sports car",
                            EngineCapacity = 5.2000000000000002,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 400.0,
                            MileageLimitForWeek = 3000.0,
                            Model = "Huracan",
                            PricePerDay = 1700.0,
                            PricePerWeek = 9000.0,
                            Year = 2023
                        },
                        new
                        {
                            Id = 8,
                            AdditionalMileageCharge = 1.3,
                            Available = true,
                            Brand = "Porsche",
                            CategoryId = 2,
                            Color = "Silver",
                            Description = "Luxury sports car",
                            EngineCapacity = 4.0,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 400.0,
                            MileageLimitForWeek = 3000.0,
                            Model = "911 GT3",
                            PricePerDay = 1400.0,
                            PricePerWeek = 8400.0,
                            Year = 2023
                        },
                        new
                        {
                            Id = 9,
                            AdditionalMileageCharge = 1.0,
                            Available = true,
                            Brand = "Tesla",
                            CategoryId = 5,
                            Color = "White",
                            Description = "Electric luxury sedan",
                            EngineCapacity = 0.0,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 400.0,
                            MileageLimitForWeek = 2500.0,
                            Model = "Model S Plaid",
                            PricePerDay = 350.0,
                            PricePerWeek = 2100.0,
                            Year = 2023
                        },
                        new
                        {
                            Id = 10,
                            AdditionalMileageCharge = 2.0,
                            Available = true,
                            Brand = "Ferrari",
                            CategoryId = 3,
                            Color = "Red",
                            Description = "Iconic Italian sports car",
                            EngineCapacity = 3.8999999999999999,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 400.0,
                            MileageLimitForWeek = 3000.0,
                            Model = "F8 Spider",
                            PricePerDay = 2300.0,
                            PricePerWeek = 10000.0,
                            Year = 2022
                        },
                        new
                        {
                            Id = 11,
                            AdditionalMileageCharge = 3.0,
                            Available = true,
                            Brand = "Rolls-Royce",
                            CategoryId = 2,
                            Color = "Black",
                            Description = "Ultimate luxury car",
                            EngineCapacity = 6.7000000000000002,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 300.0,
                            MileageLimitForWeek = 2000.0,
                            Model = "Phantom",
                            PricePerDay = 1000.0,
                            PricePerWeek = 7000.0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 12,
                            AdditionalMileageCharge = 2.5,
                            Available = true,
                            Brand = "Bentley",
                            CategoryId = 2,
                            Color = "Black",
                            Description = "Grand luxury tourer",
                            EngineCapacity = 4.0,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 300.0,
                            MileageLimitForWeek = 2000.0,
                            Model = "Continental GT-GTC",
                            PricePerDay = 1300.0,
                            PricePerWeek = 7600.0,
                            Year = 2023
                        },
                        new
                        {
                            Id = 13,
                            AdditionalMileageCharge = 2.0,
                            Available = true,
                            Brand = "McLaren",
                            CategoryId = 3,
                            Color = "Blue",
                            Description = "Exquisite British engineering",
                            EngineCapacity = 4.0,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 400.0,
                            MileageLimitForWeek = 3000.0,
                            Model = "720S",
                            PricePerDay = 1700.0,
                            PricePerWeek = 8000.0,
                            Year = 2023
                        },
                        new
                        {
                            Id = 14,
                            AdditionalMileageCharge = 2.0,
                            Available = true,
                            Brand = "Aston Martin",
                            CategoryId = 6,
                            Color = "Black",
                            Description = "Luxury British SUV",
                            EngineCapacity = 4.0,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 300.0,
                            MileageLimitForWeek = 2000.0,
                            Model = "DBX",
                            PricePerDay = 600.0,
                            PricePerWeek = 3600.0,
                            Year = 2023
                        },
                        new
                        {
                            Id = 15,
                            AdditionalMileageCharge = 1.8,
                            Available = true,
                            Brand = "Lexus",
                            CategoryId = 6,
                            Color = "Silver",
                            Description = "Sophisticated luxury SUV",
                            EngineCapacity = 3.3999999999999999,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 300.0,
                            MileageLimitForWeek = 2000.0,
                            Model = "LX",
                            PricePerDay = 500.0,
                            PricePerWeek = 3000.0,
                            Year = 2023
                        },
                        new
                        {
                            Id = 16,
                            AdditionalMileageCharge = 2.2000000000000002,
                            Available = true,
                            Brand = "Mercedes-Benz",
                            CategoryId = 3,
                            Color = "Orange",
                            Description = "German engineering excellence",
                            EngineCapacity = 4.0,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 400.0,
                            MileageLimitForWeek = 2500.0,
                            Model = "AMG GT",
                            PricePerDay = 2500.0,
                            PricePerWeek = 1100.0,
                            Year = 2022
                        },
                        new
                        {
                            Id = 17,
                            AdditionalMileageCharge = 1.0,
                            Available = true,
                            Brand = "Audi",
                            CategoryId = 6,
                            Color = "Orange",
                            Description = "Luxury SUV",
                            EngineCapacity = 4.0,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 300.0,
                            MileageLimitForWeek = 2000.0,
                            Model = "Q8",
                            PricePerDay = 400.0,
                            PricePerWeek = 2300.0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 18,
                            AdditionalMileageCharge = 1.5,
                            Available = true,
                            Brand = "BMW",
                            CategoryId = 3,
                            Color = "Yellow",
                            Description = "Sporty and agile",
                            EngineCapacity = 3.0,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 300.0,
                            MileageLimitForWeek = 2000.0,
                            Model = "M4",
                            PricePerDay = 700.0,
                            PricePerWeek = 4000.0,
                            Year = 2023
                        },
                        new
                        {
                            Id = 19,
                            AdditionalMileageCharge = 0.25,
                            Available = true,
                            Brand = "Toyota",
                            CategoryId = 9,
                            Color = "Red",
                            Description = "Dependable sedan",
                            EngineCapacity = 2.5,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 200.0,
                            MileageLimitForWeek = 1200.0,
                            Model = "Camry",
                            PricePerDay = 130.0,
                            PricePerWeek = 670.0,
                            Year = 2021
                        },
                        new
                        {
                            Id = 20,
                            AdditionalMileageCharge = 1.8,
                            Available = true,
                            Brand = "Tesla",
                            CategoryId = 6,
                            Color = "Black",
                            Description = "Sophisticated luxury SUV",
                            EngineCapacity = 0.0,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 300.0,
                            MileageLimitForWeek = 2000.0,
                            Model = "Cybertruck",
                            PricePerDay = 2000.0,
                            PricePerWeek = 12000.0,
                            Year = 2024
                        },
                        new
                        {
                            Id = 21,
                            AdditionalMileageCharge = 1.8,
                            Available = true,
                            Brand = "Land Rover",
                            CategoryId = 6,
                            Color = "Black",
                            Description = "Sophisticated luxury SUV",
                            EngineCapacity = 4.4000000000000004,
                            Gearbox = "Automatic",
                            MileageLimitForDay = 300.0,
                            MileageLimitForWeek = 2000.0,
                            Model = "Range Rover",
                            PricePerDay = 1200.0,
                            PricePerWeek = 7000.0,
                            Year = 2023
                        });
                });

            modelBuilder.Entity("RentACar.Models.CarFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("FeatureId");

                    b.ToTable("CarsFeatures");
                });

            modelBuilder.Entity("RentACar.Models.CarType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("TypeId");

                    b.ToTable("CarsTypes");
                });

            modelBuilder.Entity("RentACar.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Economy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Luxury"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sport"
                        },
                        new
                        {
                            Id = 4,
                            Name = "German Cars"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Electric"
                        },
                        new
                        {
                            Id = 6,
                            Name = "SUV"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Muscle Cars"
                        },
                        new
                        {
                            Id = 8,
                            Name = "JDM Cars"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Compact"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Classic"
                        });
                });

            modelBuilder.Entity("RentACar.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("RentACar.Models.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameOfFeatures")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameOfFeatures = "Air Conditioning"
                        },
                        new
                        {
                            Id = 2,
                            NameOfFeatures = "Heated Seats"
                        },
                        new
                        {
                            Id = 3,
                            NameOfFeatures = "Bluetooth Connectivity"
                        },
                        new
                        {
                            Id = 4,
                            NameOfFeatures = "Navigation System"
                        },
                        new
                        {
                            Id = 5,
                            NameOfFeatures = "Cruise Control"
                        },
                        new
                        {
                            Id = 6,
                            NameOfFeatures = "Rearview Camera"
                        },
                        new
                        {
                            Id = 7,
                            NameOfFeatures = "Lane Departure Warning"
                        },
                        new
                        {
                            Id = 8,
                            NameOfFeatures = "Adaptive Headlights"
                        },
                        new
                        {
                            Id = 9,
                            NameOfFeatures = "Blind Spot Detection"
                        },
                        new
                        {
                            Id = 10,
                            NameOfFeatures = "Automatic Parking"
                        },
                        new
                        {
                            Id = 11,
                            NameOfFeatures = "Push-Button Start"
                        },
                        new
                        {
                            Id = 12,
                            NameOfFeatures = "Wireless Charging"
                        },
                        new
                        {
                            Id = 13,
                            NameOfFeatures = "Panoramic Sunroof"
                        },
                        new
                        {
                            Id = 14,
                            NameOfFeatures = "Power Adjustable Seats"
                        },
                        new
                        {
                            Id = 15,
                            NameOfFeatures = "Backup Sensors"
                        },
                        new
                        {
                            Id = 16,
                            NameOfFeatures = "Heated Steering Wheel"
                        },
                        new
                        {
                            Id = 17,
                            NameOfFeatures = "Keyless Entry"
                        },
                        new
                        {
                            Id = 18,
                            NameOfFeatures = "Surround-View Camera"
                        },
                        new
                        {
                            Id = 19,
                            NameOfFeatures = "Remote Start"
                        },
                        new
                        {
                            Id = 20,
                            NameOfFeatures = "Apple CarPlay"
                        },
                        new
                        {
                            Id = 21,
                            NameOfFeatures = "Android Auto"
                        },
                        new
                        {
                            Id = 22,
                            NameOfFeatures = "Rear Cross Traffic Alert"
                        },
                        new
                        {
                            Id = 23,
                            NameOfFeatures = "Adaptive Cruise Control"
                        },
                        new
                        {
                            Id = 24,
                            NameOfFeatures = "Heads-Up Display (HUD)"
                        },
                        new
                        {
                            Id = 25,
                            NameOfFeatures = "Ambient Lighting"
                        },
                        new
                        {
                            Id = 26,
                            NameOfFeatures = "Wireless Apple CarPlay"
                        },
                        new
                        {
                            Id = 27,
                            NameOfFeatures = "Power Tailgate"
                        },
                        new
                        {
                            Id = 28,
                            NameOfFeatures = "Automatic Emergency Braking"
                        },
                        new
                        {
                            Id = 29,
                            NameOfFeatures = "Traffic Sign Recognition"
                        },
                        new
                        {
                            Id = 30,
                            NameOfFeatures = "Rain-Sensing Wipers"
                        },
                        new
                        {
                            Id = 31,
                            NameOfFeatures = "Dual-Zone Climate Control"
                        },
                        new
                        {
                            Id = 32,
                            NameOfFeatures = "Power Folding Mirrors"
                        },
                        new
                        {
                            Id = 33,
                            NameOfFeatures = "Lane Keeping Assist"
                        },
                        new
                        {
                            Id = 34,
                            NameOfFeatures = "Electric Power Steering"
                        },
                        new
                        {
                            Id = 35,
                            NameOfFeatures = "Turbocharged Engine"
                        },
                        new
                        {
                            Id = 36,
                            NameOfFeatures = "Carbon Fiber Trim"
                        },
                        new
                        {
                            Id = 37,
                            NameOfFeatures = "Active Noise Cancellation"
                        },
                        new
                        {
                            Id = 38,
                            NameOfFeatures = "All-Wheel Drive"
                        },
                        new
                        {
                            Id = 39,
                            NameOfFeatures = "Front Parking Sensors"
                        },
                        new
                        {
                            Id = 40,
                            NameOfFeatures = "Sport Mode"
                        },
                        new
                        {
                            Id = 41,
                            NameOfFeatures = "Wireless Smartphone Charging"
                        },
                        new
                        {
                            Id = 42,
                            NameOfFeatures = "Massaging Seats"
                        },
                        new
                        {
                            Id = 43,
                            NameOfFeatures = "Self-Healing Paint"
                        },
                        new
                        {
                            Id = 44,
                            NameOfFeatures = "Night Vision"
                        },
                        new
                        {
                            Id = 45,
                            NameOfFeatures = "Active Rear Spoiler"
                        },
                        new
                        {
                            Id = 46,
                            NameOfFeatures = "Heads-Up Display with Navigation"
                        },
                        new
                        {
                            Id = 47,
                            NameOfFeatures = "Wireless Internet Access"
                        },
                        new
                        {
                            Id = 48,
                            NameOfFeatures = "Active Suspension"
                        },
                        new
                        {
                            Id = 49,
                            NameOfFeatures = "Power Adjustable Steering Wheel"
                        },
                        new
                        {
                            Id = 50,
                            NameOfFeatures = "Touchscreen Control Panel"
                        });
                });

            modelBuilder.Entity("RentACar.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            Url = "/images/toyota-corolla1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            CarId = 1,
                            Url = "/images/toyota-corolla2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            CarId = 1,
                            Url = "/images/toyota-corolla3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            CarId = 1,
                            Url = "/images/toyota-corolla4.jpg"
                        },
                        new
                        {
                            Id = 5,
                            CarId = 2,
                            Url = "/images/honda-civic1.png"
                        },
                        new
                        {
                            Id = 6,
                            CarId = 2,
                            Url = "/images/honda-civic2.png"
                        },
                        new
                        {
                            Id = 7,
                            CarId = 2,
                            Url = "/images/honda-civic3.png"
                        },
                        new
                        {
                            Id = 8,
                            CarId = 2,
                            Url = "/images/honda-civic4.png"
                        },
                        new
                        {
                            Id = 9,
                            CarId = 4,
                            Url = "/images/bmw-420i1.png"
                        },
                        new
                        {
                            Id = 10,
                            CarId = 4,
                            Url = "/images/bmw-420i2.png"
                        },
                        new
                        {
                            Id = 11,
                            CarId = 4,
                            Url = "/images/bmw-420i7.png"
                        },
                        new
                        {
                            Id = 12,
                            CarId = 4,
                            Url = "/images/bmw-420i3.png"
                        },
                        new
                        {
                            Id = 13,
                            CarId = 4,
                            Url = "/images/bmw-420i4.png"
                        },
                        new
                        {
                            Id = 14,
                            CarId = 4,
                            Url = "/images/bmw-420i5.png"
                        },
                        new
                        {
                            Id = 15,
                            CarId = 4,
                            Url = "/images/bmw-420i6.png"
                        },
                        new
                        {
                            Id = 16,
                            CarId = 5,
                            Url = "/images/c300-1.webp"
                        },
                        new
                        {
                            Id = 17,
                            CarId = 5,
                            Url = "/images/c300-2.webp"
                        },
                        new
                        {
                            Id = 18,
                            CarId = 5,
                            Url = "/images/c300-3.webp"
                        },
                        new
                        {
                            Id = 19,
                            CarId = 5,
                            Url = "/images/c300-4.webp"
                        },
                        new
                        {
                            Id = 20,
                            CarId = 5,
                            Url = "/images/c300-5.webp"
                        },
                        new
                        {
                            Id = 21,
                            CarId = 5,
                            Url = "/images/c300-6.webp"
                        },
                        new
                        {
                            Id = 22,
                            CarId = 3,
                            Url = "/images/ford-mustang1.jpg"
                        },
                        new
                        {
                            Id = 23,
                            CarId = 3,
                            Url = "/images/ford-mustang2.jpg"
                        },
                        new
                        {
                            Id = 24,
                            CarId = 3,
                            Url = "/images/ford-mustang3.jpg"
                        },
                        new
                        {
                            Id = 25,
                            CarId = 3,
                            Url = "/images/ford-mustang4.jpg"
                        },
                        new
                        {
                            Id = 26,
                            CarId = 3,
                            Url = "/images/ford-mustang5.jpg"
                        },
                        new
                        {
                            Id = 27,
                            CarId = 3,
                            Url = "/images/ford-mustang6.jpg"
                        },
                        new
                        {
                            Id = 28,
                            CarId = 3,
                            Url = "/images/ford-mustang7.jpg"
                        },
                        new
                        {
                            Id = 29,
                            CarId = 3,
                            Url = "/images/ford-mustang8.jpg"
                        },
                        new
                        {
                            Id = 30,
                            CarId = 6,
                            Url = "/images/audi-r8-1.jpg"
                        },
                        new
                        {
                            Id = 31,
                            CarId = 6,
                            Url = "/images/audi-r8-2.jpg"
                        },
                        new
                        {
                            Id = 32,
                            CarId = 6,
                            Url = "/images/audi-r8-3.jpg"
                        },
                        new
                        {
                            Id = 33,
                            CarId = 6,
                            Url = "/images/audi-r8-4.jpg"
                        },
                        new
                        {
                            Id = 34,
                            CarId = 6,
                            Url = "/images/audi-r8-5.jpg"
                        },
                        new
                        {
                            Id = 35,
                            CarId = 6,
                            Url = "/images/audi-r8-6.jpg"
                        },
                        new
                        {
                            Id = 36,
                            CarId = 6,
                            Url = "/images/audi-r8-7.jpg"
                        },
                        new
                        {
                            Id = 37,
                            CarId = 6,
                            Url = "/images/audi-r8-8.jpg"
                        },
                        new
                        {
                            Id = 38,
                            CarId = 7,
                            Url = "/images/lambo-hur-1.jpg"
                        },
                        new
                        {
                            Id = 39,
                            CarId = 7,
                            Url = "/images/lambo-hur-2.jpg"
                        },
                        new
                        {
                            Id = 40,
                            CarId = 7,
                            Url = "/images/lambo-hur-3.jpg"
                        },
                        new
                        {
                            Id = 41,
                            CarId = 7,
                            Url = "/images/lambo-hur-4.jpg"
                        },
                        new
                        {
                            Id = 42,
                            CarId = 7,
                            Url = "/images/lambo-hur-5.jpg"
                        },
                        new
                        {
                            Id = 43,
                            CarId = 8,
                            Url = "/images/porsche-gt3-1.webp"
                        },
                        new
                        {
                            Id = 44,
                            CarId = 8,
                            Url = "/images/porsche-gt3-2.webp"
                        },
                        new
                        {
                            Id = 45,
                            CarId = 8,
                            Url = "/images/porsche-gt3-3.webp"
                        },
                        new
                        {
                            Id = 46,
                            CarId = 8,
                            Url = "/images/porsche-gt3-4.webp"
                        },
                        new
                        {
                            Id = 47,
                            CarId = 8,
                            Url = "/images/porsche-gt3-5.webp"
                        },
                        new
                        {
                            Id = 48,
                            CarId = 8,
                            Url = "/images/porsche-gt3-6.webp"
                        },
                        new
                        {
                            Id = 49,
                            CarId = 8,
                            Url = "/images/porsche-gt3-7.webp"
                        },
                        new
                        {
                            Id = 50,
                            CarId = 8,
                            Url = "/images/porsche-gt3-8.webp"
                        },
                        new
                        {
                            Id = 51,
                            CarId = 9,
                            Url = "/images/tesla-s-1.webp"
                        },
                        new
                        {
                            Id = 52,
                            CarId = 9,
                            Url = "/images/tesla-s-2.webp"
                        },
                        new
                        {
                            Id = 53,
                            CarId = 9,
                            Url = "/images/tesla-s-3.webp"
                        },
                        new
                        {
                            Id = 54,
                            CarId = 9,
                            Url = "/images/tesla-s-4.webp"
                        },
                        new
                        {
                            Id = 55,
                            CarId = 9,
                            Url = "/images/tesla-s-5.webp"
                        },
                        new
                        {
                            Id = 56,
                            CarId = 9,
                            Url = "/images/tesla-s-6.webp"
                        },
                        new
                        {
                            Id = 57,
                            CarId = 10,
                            Url = "/images/ferrari-f-1.webp"
                        },
                        new
                        {
                            Id = 58,
                            CarId = 10,
                            Url = "/images/ferrari-f-2.webp"
                        },
                        new
                        {
                            Id = 59,
                            CarId = 10,
                            Url = "/images/ferrari-f-3.webp"
                        },
                        new
                        {
                            Id = 60,
                            CarId = 10,
                            Url = "/images/ferrari-f-4.webp"
                        },
                        new
                        {
                            Id = 61,
                            CarId = 10,
                            Url = "/images/ferrari-f-5.webp"
                        },
                        new
                        {
                            Id = 62,
                            CarId = 10,
                            Url = "/images/ferrari-f-6.webp"
                        },
                        new
                        {
                            Id = 63,
                            CarId = 10,
                            Url = "/images/ferrari-f-7.webp"
                        },
                        new
                        {
                            Id = 64,
                            CarId = 10,
                            Url = "/images/ferrari-f-8.webp"
                        },
                        new
                        {
                            Id = 65,
                            CarId = 11,
                            Url = "/images/phanthom-1.webp"
                        },
                        new
                        {
                            Id = 66,
                            CarId = 11,
                            Url = "/images/phanthom-2.webp"
                        },
                        new
                        {
                            Id = 67,
                            CarId = 11,
                            Url = "/images/phanthom-3.webp"
                        },
                        new
                        {
                            Id = 68,
                            CarId = 11,
                            Url = "/images/phanthom-4.webp"
                        },
                        new
                        {
                            Id = 69,
                            CarId = 11,
                            Url = "/images/phanthom-5.webp"
                        },
                        new
                        {
                            Id = 70,
                            CarId = 11,
                            Url = "/images/phanthom-6.webp"
                        },
                        new
                        {
                            Id = 71,
                            CarId = 11,
                            Url = "/images/phanthom-7.webp"
                        },
                        new
                        {
                            Id = 72,
                            CarId = 11,
                            Url = "/images/phanthom-8.webp"
                        },
                        new
                        {
                            Id = 73,
                            CarId = 11,
                            Url = "/images/phanthom-9.webp"
                        },
                        new
                        {
                            Id = 74,
                            CarId = 11,
                            Url = "/images/phanthom-10.webp"
                        },
                        new
                        {
                            Id = 75,
                            CarId = 11,
                            Url = "/images/phanthom-11.webp"
                        },
                        new
                        {
                            Id = 76,
                            CarId = 12,
                            Url = "/images/bentley-continental-gt-1.webp"
                        },
                        new
                        {
                            Id = 77,
                            CarId = 12,
                            Url = "/images/bentley-continental-gt-2.webp"
                        },
                        new
                        {
                            Id = 78,
                            CarId = 12,
                            Url = "/images/bentley-continental-gt-3.webp"
                        },
                        new
                        {
                            Id = 79,
                            CarId = 12,
                            Url = "/images/bentley-continental-gt-4.webp"
                        },
                        new
                        {
                            Id = 80,
                            CarId = 12,
                            Url = "/images/bentley-continental-gt-5.webp"
                        },
                        new
                        {
                            Id = 81,
                            CarId = 12,
                            Url = "/images/bentley-continental-gt-6.webp"
                        },
                        new
                        {
                            Id = 82,
                            CarId = 12,
                            Url = "/images/bentley-continental-gt-7.webp"
                        },
                        new
                        {
                            Id = 83,
                            CarId = 12,
                            Url = "/images/bentley-continental-gt-8.webp"
                        },
                        new
                        {
                            Id = 84,
                            CarId = 12,
                            Url = "/images/bentley-continental-gt-9.webp"
                        },
                        new
                        {
                            Id = 85,
                            CarId = 12,
                            Url = "/images/bentley-continental-gt-10.webp"
                        },
                        new
                        {
                            Id = 86,
                            CarId = 12,
                            Url = "/images/bentley-continental-gt-11.webp"
                        },
                        new
                        {
                            Id = 87,
                            CarId = 12,
                            Url = "/images/bentley-continental-gt-12.webp"
                        },
                        new
                        {
                            Id = 88,
                            CarId = 13,
                            Url = "/images/mc-720s-1.webp"
                        },
                        new
                        {
                            Id = 89,
                            CarId = 13,
                            Url = "/images/mc-720s-2.webp"
                        },
                        new
                        {
                            Id = 90,
                            CarId = 13,
                            Url = "/images/mc-720s-3.webp"
                        },
                        new
                        {
                            Id = 91,
                            CarId = 13,
                            Url = "/images/mc-720s-4.webp"
                        },
                        new
                        {
                            Id = 92,
                            CarId = 13,
                            Url = "/images/mc-720s-5.webp"
                        },
                        new
                        {
                            Id = 93,
                            CarId = 13,
                            Url = "/images/mc-720s-6.webp"
                        },
                        new
                        {
                            Id = 94,
                            CarId = 13,
                            Url = "/images/mc-720s-7.webp"
                        },
                        new
                        {
                            Id = 95,
                            CarId = 14,
                            Url = "/images/aston-dbx-1.webp"
                        },
                        new
                        {
                            Id = 96,
                            CarId = 14,
                            Url = "/images/aston-dbx-2.webp"
                        },
                        new
                        {
                            Id = 97,
                            CarId = 14,
                            Url = "/images/aston-dbx-3.webp"
                        },
                        new
                        {
                            Id = 98,
                            CarId = 14,
                            Url = "/images/aston-dbx-4.webp"
                        },
                        new
                        {
                            Id = 99,
                            CarId = 14,
                            Url = "/images/aston-dbx-5.webp"
                        },
                        new
                        {
                            Id = 100,
                            CarId = 14,
                            Url = "/images/aston-dbx-6.webp"
                        },
                        new
                        {
                            Id = 101,
                            CarId = 14,
                            Url = "/images/aston-dbx-7.webp"
                        },
                        new
                        {
                            Id = 102,
                            CarId = 14,
                            Url = "/images/aston-dbx-8.webp"
                        },
                        new
                        {
                            Id = 103,
                            CarId = 15,
                            Url = "/images/lexus-lx-1.webp"
                        },
                        new
                        {
                            Id = 104,
                            CarId = 15,
                            Url = "/images/lexus-lx-2.webp"
                        },
                        new
                        {
                            Id = 105,
                            CarId = 15,
                            Url = "/images/lexus-lx-3.webp"
                        },
                        new
                        {
                            Id = 106,
                            CarId = 15,
                            Url = "/images/lexus-lx-4.webp"
                        },
                        new
                        {
                            Id = 107,
                            CarId = 15,
                            Url = "/images/lexus-lx-5.webp"
                        },
                        new
                        {
                            Id = 108,
                            CarId = 15,
                            Url = "/images/lexus-lx-6.webp"
                        },
                        new
                        {
                            Id = 109,
                            CarId = 15,
                            Url = "/images/lexus-lx-7.webp"
                        },
                        new
                        {
                            Id = 110,
                            CarId = 16,
                            Url = "/images/amg-gt-1.webp"
                        },
                        new
                        {
                            Id = 111,
                            CarId = 16,
                            Url = "/images/amg-gt-2.webp"
                        },
                        new
                        {
                            Id = 112,
                            CarId = 16,
                            Url = "/images/amg-gt-3.webp"
                        },
                        new
                        {
                            Id = 113,
                            CarId = 16,
                            Url = "/images/amg-gt-4.webp"
                        },
                        new
                        {
                            Id = 114,
                            CarId = 16,
                            Url = "/images/amg-gt-5.webp"
                        },
                        new
                        {
                            Id = 115,
                            CarId = 16,
                            Url = "/images/amg-gt-6.webp"
                        },
                        new
                        {
                            Id = 116,
                            CarId = 16,
                            Url = "/images/amg-gt-7.webp"
                        },
                        new
                        {
                            Id = 117,
                            CarId = 16,
                            Url = "/images/amg-gt-8.webp"
                        },
                        new
                        {
                            Id = 118,
                            CarId = 17,
                            Url = "/images/audi-q8-1.webp"
                        },
                        new
                        {
                            Id = 119,
                            CarId = 17,
                            Url = "/images/audi-q8-2.webp"
                        },
                        new
                        {
                            Id = 120,
                            CarId = 17,
                            Url = "/images/audi-q8-3.webp"
                        },
                        new
                        {
                            Id = 121,
                            CarId = 17,
                            Url = "/images/audi-q8-4.webp"
                        },
                        new
                        {
                            Id = 122,
                            CarId = 17,
                            Url = "/images/audi-q8-5.webp"
                        },
                        new
                        {
                            Id = 123,
                            CarId = 17,
                            Url = "/images/audi-q8-6.webp"
                        },
                        new
                        {
                            Id = 124,
                            CarId = 17,
                            Url = "/images/audi-q8-7.webp"
                        },
                        new
                        {
                            Id = 125,
                            CarId = 17,
                            Url = "/images/audi-q8-8.webp"
                        },
                        new
                        {
                            Id = 126,
                            CarId = 17,
                            Url = "/images/audi-q8-9.webp"
                        },
                        new
                        {
                            Id = 127,
                            CarId = 18,
                            Url = "/images/bmw-m4-1.webp"
                        },
                        new
                        {
                            Id = 128,
                            CarId = 18,
                            Url = "/images/bmw-m4-2.webp"
                        },
                        new
                        {
                            Id = 129,
                            CarId = 18,
                            Url = "/images/bmw-m4-3.webp"
                        },
                        new
                        {
                            Id = 130,
                            CarId = 18,
                            Url = "/images/bmw-m4-4.webp"
                        },
                        new
                        {
                            Id = 131,
                            CarId = 18,
                            Url = "/images/bmw-m4-5.webp"
                        },
                        new
                        {
                            Id = 132,
                            CarId = 18,
                            Url = "/images/bmw-m4-6.webp"
                        },
                        new
                        {
                            Id = 133,
                            CarId = 19,
                            Url = "/images/camry-1.webp"
                        },
                        new
                        {
                            Id = 134,
                            CarId = 19,
                            Url = "/images/camry-2.webp"
                        },
                        new
                        {
                            Id = 135,
                            CarId = 19,
                            Url = "/images/camry-3.webp"
                        },
                        new
                        {
                            Id = 136,
                            CarId = 19,
                            Url = "/images/camry-4.webp"
                        },
                        new
                        {
                            Id = 137,
                            CarId = 19,
                            Url = "/images/camry-5.webp"
                        },
                        new
                        {
                            Id = 138,
                            CarId = 19,
                            Url = "/images/camry-6.webp"
                        },
                        new
                        {
                            Id = 139,
                            CarId = 19,
                            Url = "/images/camry-7.webp"
                        },
                        new
                        {
                            Id = 140,
                            CarId = 20,
                            Url = "/images/cybertruck-1.webp"
                        },
                        new
                        {
                            Id = 141,
                            CarId = 20,
                            Url = "/images/cybertruck-2.webp"
                        },
                        new
                        {
                            Id = 142,
                            CarId = 20,
                            Url = "/images/cybertruck-3.webp"
                        },
                        new
                        {
                            Id = 143,
                            CarId = 20,
                            Url = "/images/cybertruck-4.webp"
                        },
                        new
                        {
                            Id = 144,
                            CarId = 20,
                            Url = "/images/cybertruck-5.webp"
                        },
                        new
                        {
                            Id = 145,
                            CarId = 21,
                            Url = "/images/rover-1.webp"
                        },
                        new
                        {
                            Id = 146,
                            CarId = 21,
                            Url = "/images/rover-2.webp"
                        },
                        new
                        {
                            Id = 147,
                            CarId = 21,
                            Url = "/images/rover-3.webp"
                        },
                        new
                        {
                            Id = 148,
                            CarId = 21,
                            Url = "/images/rover-4.webp"
                        },
                        new
                        {
                            Id = 149,
                            CarId = 21,
                            Url = "/images/rover-5.webp"
                        },
                        new
                        {
                            Id = 150,
                            CarId = 21,
                            Url = "/images/rover-6.webp"
                        },
                        new
                        {
                            Id = 151,
                            CarId = 21,
                            Url = "/images/rover-7.webp"
                        },
                        new
                        {
                            Id = 152,
                            CarId = 12,
                            Url = "/images/rover-8.webp"
                        },
                        new
                        {
                            Id = 153,
                            CarId = 12,
                            Url = "/images/rover-9.webp"
                        });
                });

            modelBuilder.Entity("RentACar.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReturnBackAtSamePlace")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelfPick")
                        .HasColumnType("bit");

                    b.Property<string>("PaidDeliveryPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RentACar.Models.Car", b =>
                {
                    b.HasOne("RentACar.Models.Category", "Category")
                        .WithMany("Cars")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("RentACar.Models.CarFeature", b =>
                {
                    b.HasOne("RentACar.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentACar.Models.Feature", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("RentACar.Models.CarType", b =>
                {
                    b.HasOne("RentACar.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentACar.Models.CType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("RentACar.Models.Image", b =>
                {
                    b.HasOne("RentACar.Models.Car", "Car")
                        .WithMany("Images")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("RentACar.Models.Reservation", b =>
                {
                    b.HasOne("RentACar.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentACar.Models.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("RentACar.Models.Car", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("RentACar.Models.Category", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("RentACar.Models.Customer", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
